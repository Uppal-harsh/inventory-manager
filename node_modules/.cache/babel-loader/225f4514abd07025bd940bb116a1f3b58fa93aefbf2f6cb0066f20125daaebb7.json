{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh uppal\\\\HARSH\\\\DEMO_1\\\\demo(ai)\\\\src\\\\contexts\\\\SocketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const useSocket = () => {\n  _s();\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    // Connect to the backend WebSocket server\n    const newSocket = io('ws://localhost:8000', {\n      transports: ['websocket'],\n      autoConnect: true\n    });\n    newSocket.on('connect', () => {\n      console.log('Connected to server');\n      setConnected(true);\n    });\n    newSocket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setConnected(false);\n    });\n    newSocket.on('inventory_update', data => {\n      setMessages(prev => [...prev, {\n        type: 'inventory_update',\n        data,\n        timestamp: new Date()\n      }]);\n    });\n    newSocket.on('agent_message', data => {\n      setMessages(prev => [...prev, {\n        type: 'agent_message',\n        data,\n        timestamp: new Date()\n      }]);\n    });\n    newSocket.on('optimization_result', data => {\n      setMessages(prev => [...prev, {\n        type: 'optimization_result',\n        data,\n        timestamp: new Date()\n      }]);\n    });\n    newSocket.on('system_metrics', data => {\n      setMessages(prev => [...prev, {\n        type: 'system_metrics',\n        data,\n        timestamp: new Date()\n      }]);\n    });\n    setSocket(newSocket);\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n  const sendMessage = (event, data) => {\n    if (socket && connected) {\n      socket.emit(event, data);\n    }\n  };\n  const value = {\n    socket,\n    connected,\n    messages,\n    sendMessage\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s2(SocketProvider, \"eCqFaNcIDTqThpn8Je4ys1YP4KE=\");\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","jsxDEV","_jsxDEV","SocketContext","useSocket","_s","context","Error","SocketProvider","children","_s2","socket","setSocket","connected","setConnected","messages","setMessages","newSocket","transports","autoConnect","on","console","log","data","prev","type","timestamp","Date","close","sendMessage","event","emit","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/harsh uppal/HARSH/DEMO_1/demo(ai)/src/contexts/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst SocketContext = createContext();\r\n\r\nexport const useSocket = () => {\r\n  const context = useContext(SocketContext);\r\n  if (!context) {\r\n    throw new Error('useSocket must be used within a SocketProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [connected, setConnected] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Connect to the backend WebSocket server\r\n    const newSocket = io('ws://localhost:8000', {\r\n      transports: ['websocket'],\r\n      autoConnect: true\r\n    });\r\n\r\n    newSocket.on('connect', () => {\r\n      console.log('Connected to server');\r\n      setConnected(true);\r\n    });\r\n\r\n    newSocket.on('disconnect', () => {\r\n      console.log('Disconnected from server');\r\n      setConnected(false);\r\n    });\r\n\r\n    newSocket.on('inventory_update', (data) => {\r\n      setMessages(prev => [...prev, {\r\n        type: 'inventory_update',\r\n        data,\r\n        timestamp: new Date()\r\n      }]);\r\n    });\r\n\r\n    newSocket.on('agent_message', (data) => {\r\n      setMessages(prev => [...prev, {\r\n        type: 'agent_message',\r\n        data,\r\n        timestamp: new Date()\r\n      }]);\r\n    });\r\n\r\n    newSocket.on('optimization_result', (data) => {\r\n      setMessages(prev => [...prev, {\r\n        type: 'optimization_result',\r\n        data,\r\n        timestamp: new Date()\r\n      }]);\r\n    });\r\n\r\n    newSocket.on('system_metrics', (data) => {\r\n      setMessages(prev => [...prev, {\r\n        type: 'system_metrics',\r\n        data,\r\n        timestamp: new Date()\r\n      }]);\r\n    });\r\n\r\n    setSocket(newSocket);\r\n\r\n    return () => {\r\n      newSocket.close();\r\n    };\r\n  }, []);\r\n\r\n  const sendMessage = (event, data) => {\r\n    if (socket && connected) {\r\n      socket.emit(event, data);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    socket,\r\n    connected,\r\n    messages,\r\n    sendMessage\r\n  };\r\n\r\n  return (\r\n    <SocketContext.Provider value={value}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}